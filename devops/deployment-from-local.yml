version: "3.3"
services:
  sentitweet:
    container_name: "sentitweet"
    build:
      context: ..
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
      - "3000:3000"
    expose:
      - 80
    volumes:
      - ../:/app
    restart: always
    networks:
      - sentitweet

  postgres-db-sentitweet:
    container_name: "postgres-db-sentitweet"
    image: postgres:14.0-alpine
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=sentitweet
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=dbsentitweet
    networks:
      - sentitweet
    tty: true

  redis:
    image: "redis:4"
    command: redis-server #--requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - redis_conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - sentitweet

volumes:
  postgres_data:
  redis_data:
  redis_conf:

networks:
  sentitweet:
    driver: bridge